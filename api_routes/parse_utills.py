import re
from datetime import datetime


def format_date(date_string):
    date_obj = datetime.fromisoformat(date_string.replace("Z", "+00:00"))

    return date_obj.strftime("%Y-%m-%d %H:%M")


def escape_markdown_v2(text):
    """
    –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Telegram Markdown V2.
    """
    # –°–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è Markdown V2
    escape_chars = r"_[]~`>#=|{}"
    return re.sub(r"([{}])".format(re.escape(escape_chars)), r"\\\1", text)


def parse_order_message(message_data: dict):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ JSON-–¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞, –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
    """
    # –¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏
    delivery_type = message_data["delivery"]["type"]

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–∞–≤–∫–µ, –≤–∫–ª—é—á–∞—è —Ç–æ–ª—å–∫–æ –Ω–µ–Ω—É–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    delivery_info = []
    if delivery_type == "DELIVERY":
        if message_data["delivery"].get("address"):
            delivery_info.append(f"—É–ª. {message_data['delivery']['address']}")
        if message_data["delivery"].get("flat"):
            delivery_info.append(f"–∫–≤. {message_data['delivery']['flat']}")
        if message_data["delivery"].get("floor"):
            delivery_info.append(f"—ç—Ç–∞–∂ {message_data['delivery']['floor']}")
        if message_data["delivery"].get("porch"):
            delivery_info.append(f"–ø–æ–¥—ä–µ–∑–¥ {message_data['delivery']['porch']}")
        if message_data["delivery"].get("doorCode"):
            delivery_info.append(f"–∫–æ–¥ –¥–≤–µ—Ä–∏ {message_data['delivery']['doorCode']}")
        if message_data["delivery"].get("status"):
            delivery_info.append(
                f"—Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏ {message_data['delivery']['status']}"
            )
    else:
        delivery_info.append("–°–∞–º–æ–≤—ã–≤–æ–∑")

    delivery_type_text = "–ù–∞ –≤—ã–Ω–æ—Å" if delivery_type == "DELIVERY" else "–°–∞–º–æ–≤—ã–≤–æ–∑"

    # –°–æ–±–∏—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–∞–≤–∫–µ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
    delivery_info_str = ", ".join(delivery_info) if delivery_info else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

    # –ö–æ–¥ —Å–∞–º–æ–≤—ã–≤–æ–∑–∞
    pickup_code = (
        f"{message_data['delivery'].get('pickupCode')}\n"
        if message_data["delivery"].get("pickupCode")
        else ""
    )

    # –ü—Ä–æ–¥—É–∫—Ç—ã
    products = "\n".join(
        [
            f"- {p['title']} (x{p['amount']}) ‚Äî {p['price']}‚ÇΩ"
            for p in message_data["products"]
        ]
    )

    # –î–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º
    for product in message_data["products"]:
        if product.get("additions"):
            additions = "\n".join(
                [
                    f"    + {add['title']} (x{add['amount']}) ‚Äî {add['price']}‚ÇΩ"
                    for add in product["additions"]
                ]
            )
            products += f"\n{additions}"

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–µ
    place = message_data["places"]
    place_title = place.get("title", "–ú–µ—Å—Ç–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ")
    ready_time = (
        format_date(message_data["readyTime"])
        if message_data.get("readyTime")
        else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    )
    created_at = (
        format_date(message_data["createdAt"])
        if message_data.get("createdAt")
        else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    )

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    message_text = escape_markdown_v2(
        f"üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*\n\n"
        f"üìç *–ú–µ—Å—Ç–æ*: {place_title}\n"
        f"üî¢ *–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞*: {message_data['orderNumber']}\n"
        f"üë• *–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä—Å–æ–Ω*: {message_data.get('personsCount', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"üïí *–í—Ä–µ–º—è –≤—ã–¥–∞—á–∏*: {ready_time}\n"
        f"üïí *–í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞*: {created_at}\n"
        f"üë§ *–ö–ª–∏–µ–Ω—Ç*: {message_data['customerInfo']['customerName']} "
        f"({message_data['customerInfo']['customerPhone']})\n"
        f"üöö *–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏*: {delivery_type_text}\n"
        f"üìç *–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏*: {delivery_info_str}\n"
        f"üìç *–ö–æ–¥ —Å–∞–º–æ–≤—ã–≤–æ–∑–∞*: {pickup_code}\n"
        f"üìú *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞*: {message_data['status']}\n\n"
        f"üõí *–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*\n{products}\n"
        f"üí∞ *–ò—Ç–æ–≥–æ*: {message_data['totalCost']}‚ÇΩ"
    )

    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º
    inline_keyboard = {
        "inline_keyboard": [
            [
                {
                    "text": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑",
                    "url": message_data.get("order_approve"),
                },
                {"text": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", "url": message_data.get("order_cancel")},
            ]
        ]
    }

    return message_text, inline_keyboard